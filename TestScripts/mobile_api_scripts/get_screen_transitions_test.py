#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time 
import json
clr.AddReference("MobileScriptingLibrary") 
import MobileScriptingLibrary 
dut = MobileScriptingLibrary.MobileDUT() 
logger = MobileScriptingLibrary.Logger() 
chkpt = MobileScriptingLibrary.CheckPoint() 
config = MobileScriptingLibrary.DeviceConfig() 

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''' 

#''''''''''''''''''''''''''''''FOR iOS DEVICE'''''''''''''''''''''''''''''' 
config.DeviceType = "iOS" 
config.AppName = "com.google.ios.youtube" 


#''''''''''''''''''''''''''''FOR ANDROID DEVICE'''''''''''''''''''''''''''' 
#config.DeviceType = "Android" 
#config.AppPackage = "com.google.android.youtube" 
#config.AppActivity = ".HomeActivity" 

args = sys.argv 
scriptPath = os.path.realpath(__file__) 
dut.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 
       
try: 
    if(dut.InitApp(config)): 
        logger.Log("App launched.") 
    
#    dut.Tap(679,130)
#    time.sleep(4)
    #dut.Tap(970,1870)

    from System.Collections.Generic import List

    input_param_arg =List[MobileScriptingLibrary.HighPrecisionValidationService.MotionParams]()

    input_param_name_list = []
#    for i in range(2):
#        input_param_name = '_'+str(i)+'inputParam'
#        input_param_name_list.append(input_param_name)
#        logger.Log("logMessage"+str(input_param_name))

#    for input in input_param_name_list:
#        index = input_param_name_list.index(input)
#        input = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
#        input.x_cord = 69#62 + index*60
#        input.y_cord = 950#0 + index*90
##        input.x_cord = 50
##        input.y_cord = 760
#        input.width = 80#450
#        input.height = 120#300
#        input.sensitivity = 2
#        #input.enableAggressiveMode = False
#        # Assigning input param to be send    
#        input_param_arg.Add(input) 
#    input = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
#    input.x_cord = 3#62 + index*60
#    input.y_cord = 0#0 + index*90
#    input.width = 713#450
#    input.height = 15#300
#    input.sensitivity = 2
#    #input.enableAggressiveMode = False
#    input_param_arg.Add(input)

    input = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
    input.x_cord = 290  # 62 + index*60
    input.y_cord = 180  # 0 + index*90
    input.width = 515  # 450
    input.height = 215  # 300
    input.sensitivity = 2
    input.enableAggressiveMode = True
    input_param_arg.Add(input)

    input = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
    input.x_cord = 290  # 62 + index*60
    input.y_cord = 180  # 0 + index*90
    input.width = 540  # 450
    input.height = 315  # 300
    input.sensitivity = 2
    input.enableAggressiveMode = True
    input_param_arg.Add(input)

#    input = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
#    input.x_cord = 400  
#    input.y_cord = 560  
#    input.width = 150  
#    input.height = 620  
#    input.sensitivity = 2
#    input_param_arg.Add(input)

#    input = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
#    input.x_cord = 400  
#    input.y_cord = 180  
#    input.width = 150  
#    input.height = 620  
#    input.sensitivity = 2
#    input_param_arg.Add(input)

    tapData = MobileScriptingLibrary.Models.TapData()
    #tapData.type='coordinates'
    tapData.x_Cord = 970#350#150#679
    tapData.y_Cord = 1870#160#130
#    tapData.type=MobileScriptingLibrary.Constants.ElementType.XPath
#    tapData.value="//android.widget.ImageView[@content-desc='Search']"
    tapDataList = List[MobileScriptingLibrary.Models.TapData]()
    tapDataList.Add(tapData)

    tapData1 = MobileScriptingLibrary.Models.TapData()
    #tapData.type='coordinates'
    tapData1.x_Cord = 350#350#150#679
    tapData1.y_Cord = 1870#160#130
    tapDataList.Add(tapData1)

    logger.Log("Gonna Start!!!")
    #time.sleep(5)
    duration = -125
    response = dut.validator.GetScreenTransitions(dut,duration,input_param_arg, tapDataList)

    logger.Log("===============Obtained Response===================")

    if response is None:
        logger.Log("----response is None----")
    if response.MotionData is None:
        logger.Log("----response.MotionData is None----")

    sum_of_duration = 0
    if response is not None and response.MotionData is not None:
        for i in response.MotionData:
            logger.Log("Duration obtained from API >>> " + str(i.Duration))
            dut.CommitStepResult("Duration Obtained!", str(i.Duration))
            sum_of_duration += i.Duration
    else:
        logger.Log("Failed to get duration")
        dut.CommitStepResult("Duration !!!", "FAILED")

    logger.Log("Total duration calculated from response ---> " + str(sum_of_duration))
finally: 
    #dut.Stop() 
    pass

#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
