#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time 
from System.Collections.Generic import List 
clr.AddReference("ScriptingLibrary") 
import ScriptingLibrary 
dut = ScriptingLibrary.DUT() 
logger = ScriptingLibrary.Logger() 
chkpt = ScriptingLibrary.CheckPoint() 
testResult = ScriptingLibrary.TestResult() 
args = sys.argv 
scriptPath = os.path.realpath(__file__) 
remoteFiringType = "IP" 
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 

#''''''''''''''''''''''''''''''''IMPORTS'''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS'''''''''''''''''''''''''''''''' 

#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
request = ScriptingLibrary.HighPrecisionValidationService.VideoAnalysisRequest() 
deviceInfo = ScriptingLibrary.HighPrecisionValidationService.DeviceInfo() 
algorithmList =List[ScriptingLibrary.HighPrecisionValidationService.Algorithm]() 
algorithm = ScriptingLibrary.HighPrecisionValidationService.Algorithm() 
reservationRequest = ScriptingLibrary.HighPrecisionValidationService.SlotReservationRequest()
reservationRequest.AlgorithmCount = 1
reservationResponse = dut.ReserveSlotForHPA(reservationRequest)
algorithm.Name = "Histogram" 
time.sleep(30)
algorithm.Params = "eyAgICAicmdiRGV0YWlsc0xpc3QiOiBbewogICAgICAgICJyIjogMTAwLAogICAgICAgICJnIjogMzEsCiAgICAgICAgImIiOiAxNDAsCiAgICAgICAgInBpeGVsQ291bnRUaHJlc2hvbGQiOiA5MAogICAgfSwgewogICAgICAgICJyIjogMjU1LAogICAgICAgICJnIjogMTE2LAogICAgICAgICJiIjogNSwKICAgICAgICAicGl4ZWxDb3VudFRocmVzaG9sZCI6IDkwCiAgICB9LCB7CiAgICAgICAgInIiOiA0MSwKICAgICAgICAiZyI6IDEzOSwKICAgICAgICAiYiI6IDI2LAogICAgICAgICJwaXhlbENvdW50VGhyZXNob2xkIjogOTAKICAgIH0sIHsKICAgICAgICAiciI6IDAsCiAgICAgICAgImciOiAxMDEsCiAgICAgICAgImIiOiAyNTUsCiAgICAgICAgInBpeGVsQ291bnRUaHJlc2hvbGQiOiA5MAogICAgfV0sCiAgICAibWFza0RldGFpbHMiOiB7CiAgICAgICAgInhjb3JkIjogOTE2LAogICAgICAgICJ5Y29yZCI6IDQ5OCwKICAgICAgICAid2lkdGgiOiA5MCwKICAgICAgICAiaGVpZ2h0IjogODcKICAgIH0KfQ=="
algorithmList.Add(algorithm) 
request.Duration = 50
request.Token = reservationResponse.Data.Token
request.Algorithms = algorithmList 
request.DeviceInfo = deviceInfo 
response = dut.validator.StartHighPrecisionFrameAnalysis(request)
for i in range(3):
    if response.Error.Message != 'Token Expired':
        time.sleep(i*3)
        logger.Log("After "+str(30+i*2)+" min delay")
        response = dut.validator.StartHighPrecisionFrameAnalysis(request)
    else:
        break

