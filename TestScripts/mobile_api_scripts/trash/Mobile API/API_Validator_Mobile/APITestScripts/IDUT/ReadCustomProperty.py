#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestScript ID  : FE_STB_API_DUT_09
#Description    : Validation of ReadCustomProperty
#API Description: Returs custom  attribute values
#Test descriptio:
#Author         : Arya L
#Date           : 24 April 2018
#Script Version : 1.0
# Note          : Before running the script create custom attributes in the
#following names in the target device
#attribute0, attribute1, attribute2, attribute3, attribute4 and attribute5.
# Set values to all except attribute5.
#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#ipmorting python modules
import clr, sys, os, time, datetime

#importing user defined modules

sys.path.append('../../')
try:
    # Import library file
    import library.commonFunctions as comLib
except ImportError:
    comLib.logger.Warn("Failed to import commonFunctions file")
    sys.exit()

try:
    from configuration.constants import BUILD_NO, API_PASS, API_FAIL
except ImportError:
    comLib.logger.Warn("Failed to import constants file")
    sys.exit()

try:
    from configuration.config import readCustomPropertyInputDict, readCustomPropertyTestCaseCount
except ImportError:
    comLib.logger.Warn("Failed to import config file")
    sys.exit()

#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

# Use defined variables and functions
global inputDict

APIname = "ReadCustomProperty"
testCaseMax = readCustomPropertyTestCaseCount
exceptionOccured = False
inputDict = readCustomPropertyInputDict

#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#@Function Name	  	: TestAPI()
#@Description		: Tests the ReadCustomProperty API with diffrent parameters
# and logs its response (status, duration)
#@Input arguments	: Iteration count
#@Output values		: Null
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
def TestAPI(i):
    try:
        # Getting inputs from global dict
        testScenario = inputDict[i][0]
        expected = inputDict[i][1]

        customProperty = inputDict[i][2]

        testCaseName = APIname + "_" + str(i)

        #Logging test case details
        comLib.logger.Log( "TestCase:  " +str (testCaseName))
        comLib.dut.CommitStepResult("TestCase", testCaseName)
        comLib.logger.Log( "Test scenario:  " +str (testScenario))
        comLib.dut.CommitStepResult("Test Scenario", testScenario)

        #Logging input parameters
        comLib.logger.Log( " ********** Input details ********** ")
        comLib.logger.Log("customProperty: " + str(customProperty))

        #API call and duration calculation
        time1 = comLib.getTimestamp()
        APIstring = comLib.dut.ReadCustomProperty(customProperty)
        time2 = comLib.getTimestamp()
        APIduration = comLib.getAPIduration(time1, time2)
        comLib.logger.Log( "Time taken by the API to return:  " +str (APIduration))
        comLib.dut.CommitStepResult("API duration ", str(APIduration))

        #Updating test case status
        if APIstring != "":
            observed = API_PASS
            comLib.UpdateTestCaseResult(True, observed, expected)
        else:
            observed = API_FAIL
            comLib.UpdateTestCaseResult(False, observed, expected)
    except Exception as e:
         comLib.logger.Error("Exception thrown by python from TestAPI: " + str(e))
         global exceptionOccured
         exceptionOccured = True


# ******************************************************************************
def main():
    try:
        comLib.dut.validator.QuickCapture("quickCapimage_Initial")
        # Logging basic test informations
        comLib.logger.Log("############### API VALIDATION START #############")
        comLib.logger.Log("Build Number: " + BUILD_NO)
        comLib.logger.Log("API under test: " + str(APIname))
        comLib.dut.CommitStepResult("Build Number  : ", BUILD_NO)
        comLib.dut.CommitStepResult("API: ", APIname)

        #executing precondition, making the box awake by home key press
        comLib.preCondition()


        #executing test caases
        comLib.dut.validator.QuickCapture("quickCapimage_BeforeAPIcall")
        for i in range( testCaseMax ):
            TestAPI(i)
        comLib.dut.validator.QuickCapture("quickCapimage_AfterAPIcall")

    except Exception as e:
         comLib.logger.Error("Exception thrown by python : " + str(e))
         observed = "exception"
         global exceptionOccured
         exceptionOccured = True
    finally:
        #Updating script status
        if exceptionOccured:
            comLib.dut.CommitTestResult("ERROR")
        else:
            comLib.UpdateTestScriptResult()
        comLib.logger.Log("################ TEST SCRIPT END #################")
# *****************************************************************************
if __name__ == "__main__":
    main()
# *****************************************************************************
