#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time
from PIL import Image
import cStringIO
import urllib
clr.AddReference("MobileScriptingLibrary") 
import MobileScriptingLibrary 
dut = MobileScriptingLibrary.MobileDUT() 
logger = MobileScriptingLibrary.Logger() 
chkpt = MobileScriptingLibrary.CheckPoint() 
config = MobileScriptingLibrary.DeviceConfig() 

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''' 

#''''''''''''''''''''''''''''''FOR iOS DEVICE'''''''''''''''''''''''''''''' 
#config.DeviceType = "iOS" 
#config.AppName = "com.google.ios.youtube" 


#''''''''''''''''''''''''''''FOR ANDROID DEVICE'''''''''''''''''''''''''''' 
config.DeviceType = "Android" 
config.AppPackage = "com.google.android.youtube" 
config.AppActivity = ".HomeActivity" 

args = sys.argv 
scriptPath = os.path.realpath(__file__) 
dut.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 

def get_ss():
    ss = dut.GetScreenshot()
    time.sleep(1)
    img = dut.validator.UploadScreenshot("img_name", ss)
    logger.Log("Uploaded image {}".format(img))


def get_image_resolution():
    '''

    :return:
    '''

    resolution = None
    try:
        # image_url = self.upload_ss()
        # if not image_url:
        #     return resolution

        image_url = dut.validator.QuickCapture("get_image_resolution")
        file_name = cStringIO.StringIO(urllib.urlopen(image_url).read())
        img = Image.open(file_name)
        resolution = img.size

    except Exception as e:
        logger.Log("Failed to get the resolution")
        resolution = None

    finally:
        return resolution


x, y  = 0, 0,
w, h = get_image_resolution()

def capture_image():
    image_path = dut.validator.CaptureImage(x, y, w, h, "image", 90, 2)
    logger.Log("imagePath : " + image_path)


try: 
    if(dut.InitApp(config)): 
        logger.Log("App launched.") 

        #dut.Tap(260, 300)
        for i in range(0, 20):
            get_ss()
            time.sleep(3)
            capture_image()
            #time.sleep(5)

finally: 
    dut.Stop() 

#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
