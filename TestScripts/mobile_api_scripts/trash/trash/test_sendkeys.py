#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time
from PIL import Image
import cStringIO
import urllib
clr.AddReference("MobileScriptingLibrary") 
import MobileScriptingLibrary 
dut = MobileScriptingLibrary.MobileDUT() 
logger = MobileScriptingLibrary.Logger() 
chkpt = MobileScriptingLibrary.CheckPoint() 
config = MobileScriptingLibrary.DeviceConfig() 

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''' 

#''''''''''''''''''''''''''''''FOR iOS DEVICE'''''''''''''''''''''''''''''' 
#config.DeviceType = "iOS" 
#config.AppName = "com.google.ios.youtube" 


#''''''''''''''''''''''''''''FOR ANDROID DEVICE'''''''''''''''''''''''''''' 
config.DeviceType = "Android" 
config.AppPackage = "com.google.android.youtube" 
config.AppActivity = ".HomeActivity" 

args = sys.argv 
scriptPath = os.path.realpath(__file__) 
dut.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 
def get_ss():
    ss = dut.GetScreenshot()
    time.sleep(1)
    img = dut.validator.UploadScreenshot("img_name", ss)
    logger.Log("Uploaded image {}".format(img))


try: 
    if(dut.InitApp(config)): 
        logger.Log("App launched.")

        cleared = dut.ClearText(MobileScriptingLibrary.Constants.ElementType.XPath,
                                '//android.widget.ImageView[@content-desc="Search"]')
        dut.validator.QuickCapture("ClearText_imageName")
        logger.Log("Cleared - {}".format(cleared))
        get = dut.GetText(MobileScriptingLibrary.Constants.ElementType.XPath,
                          '//android.widget.EditText[@text="Search YouTube"]')
        logger.Log("get - {}".format(get))
        get_ss()

        dut.TapElement(MobileScriptingLibrary.Constants.ElementType.XPath,
                       '//android.widget.ImageView[@content-desc="Search"]')
        
        time.sleep(1)
#        present = dut.IsElementPresent(MobileScriptingLibrary.Constants.ElementType.XPath,
#                       '//android.widget.EditText[@text="Search YouTube"]')
#        logger.Log("present {}".format(present))
        
        cleared = dut.ClearText(MobileScriptingLibrary.Constants.ElementType.XPath,
                               '//android.widget.EditText[@text="Search YouTube"]')
        dut.validator.QuickCapture("ClearText_imageName")
        logger.Log("Cleared - {}".format(cleared))
        
        get = dut.GetText(MobileScriptingLibrary.Constants.ElementType.XPath,
                               '//android.widget.EditText[@text="Search YouTube"]')
        logger.Log("get - {}".format(get))
        get_ss()
        sent = dut.SendKeys(MobileScriptingLibrary.Constants.ElementType.XPath,
                       '//android.widget.EditText[@text="Search YouTube"]', "master chef australia")
        logger.Log("sent {}".format(sent))
        time.sleep(5)
        get_ss()

        cleared = dut.ClearText(MobileScriptingLibrary.Constants.ElementType.XPath,
                       '//android.widget.EditText[@text="master chef australia"]')
        dut.validator.QuickCapture("ClearText_imageName")
        logger.Log("Cleared - {}".format(cleared))
        get_ss()

        get = dut.GetText(MobileScriptingLibrary.Constants.ElementType.XPath,
                               '//android.widget.EditText[@text="Search YouTube"]')
        logger.Log("get - {}".format(get))
        get_ss()
#        sent = dut.SendKeys(MobileScriptingLibrary.Constants.ElementType.XPath,
#                            '//android.widget.EditText[@text="tataelxsi trivandrum"]', "123tataelxsi trivandrum")
#        logger.Log("11sent {}".format(sent))

#        sent = dut.SendKeys(MobileScriptingLibrary.Constants.ElementType.XPath,
#                            '//android.widget.EditText[@text="123tataelxsi trivandrum"]', "123tataelxsi trivandrum")
#        logger.Log("11sent {}".format(sent))



finally: 
    pass
    # dut.Stop()

#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
