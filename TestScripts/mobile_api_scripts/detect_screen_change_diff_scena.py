#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID:
#Description:
#Author:
#Date:
#Version:

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
from System.Collections.Generic import List
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IP"
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

dut.controller.sendCommand("Home") 
time.sleep(3)
#dut.controller.sendCommand("Down") 
#time.sleep(2)
#dut.controller.sendCommand("Down") 
#time.sleep(2)
#dut.controller.sendCommand("Down") 
#time.sleep(2)
#dut.controller.sendCommand("Down") 
#time.sleep(2)
#dut.controller.sendCommand("Down") 
#time.sleep(2)
#dut.controller.sendCommand("Down") 
#time.sleep(2)
dut.controller.sendCommand("Right") 
time.sleep(2)



# updating input params
#inputParam = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
#inputParam.x_cord = 0
#inputParam.y_cord = 0
#inputParam.width = 700
#inputParam.height = 700
#inputParam.sensitivity = 3
input_param_arg =List[ScriptingLibrary.HighPrecisionValidationService.MotionParams]()


input_param_name_list = []
for i in range(8):
    input_param_name = '_'+str(i)+'inputParam'
    input_param_name_list.append(input_param_name)
    logger.Log("logMessage"+str(input_param_name))

    

for input in input_param_name_list:
    index = input_param_name_list.index(input)
    input = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
#    input.x_cord = 0 + index*200
#    input.y_cord = 0 + index*80
    input.x_cord = 50
    input.y_cord = 10
    input.width = 1700
    input.height = 1000
    input.sensitivity = 3
    #input.enableAggressiveMode = False

    # Assigning input param to be send    
    input_param_arg.Add(input)  

duration = 5
dut.controller.cacheCommand("Ok")

ms1 = time.time()*1000.0
response = dut.validator.DetectScreenChange(duration,input_param_arg)
ms2 = time.time()*1000.0
logger.Log("Time taken by the 1st API is >>>> "+str(ms2-ms1))

logger.Log("====================================================")
logger.Log("===============Obtained Response===================")
logger.Log("====================================================")

sum_of_duration = 0
count = 0
if response is not None and response.MotionData is not None:
    for i in response.MotionData:
        count += 1
        logger.Log("Duration obtained from API >>> " + str(i.Duration))
        dut.CommitStepResult("Duration Obtained!", str(i.Duration))
        sum_of_duration += i.Duration
else:
    logger.Log("Failed to get duration")
    dut.CommitStepResult("Duration !!!", "FAILED")

logger.Log("No: of durations calculated from response ---> "+str(count))
logger.Log("Total duration calculated from response ---> "+str(sum_of_duration))

