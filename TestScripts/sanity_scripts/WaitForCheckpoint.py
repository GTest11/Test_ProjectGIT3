#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID:
#Description:
#Author:
#Date:
#Version:

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IR"
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
import sys


#time1 = comLib.getTimestamp()

#time2 = comLib.getTimestamp()
#APIduration = comLib.getAPIduration(time1, time2)

#Provide valid parameters
#checkpName="waitForCheckPoint_OCR"
checkpName="waitForCheckPoint_IC"
timeToWait = 20
initialDelay = 1 #should be >=0
duration = timeToWait + 10


if(dut.validator.StartCaptureZapFrames(duration)):
    time = dut.validator.WaitForCheckpoint(checkpName, timeToWait, initialDelay)        
    #key presses or other code

    if(time > 0):
       logger.Log("time:" + str(time))
       logger.Log("Test case passed")
    else:
       logger.Log("Test case failed")
    dut.validator.StopCaptureZapFrames()
else:
   logger.Log("Unable to start frame capture")
