# -*- coding: utf-8 -*-
# -*- coding: latin-1 -*-
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID:
#Description:
#Author:
#Date:
#Version:

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IR"
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
English = "eng"
Italian  = "ita"
Portuguese  = "por"
German  = "deu"
Spanish  = "spa"
Chinese   = "chi_sim"
Hindi = "hin"


x_coordinate= 1010
y_coordinate= 242
width= 215
height= 55
refTextIta="Pubblicità"


x_coordinate= 175
y_coordinate= 641
width= 220
height= 64
refTextIta2="Sottotitoli"

#port
text = "Aplicação"
x_coordinate= 687
y_coordinate= 657
width= 112
height= 38

#port
text = "Copyrights"
x_coordinate= 801
y_coordinate= 201
width= 286
height= 79

multiFilters = "Contrast:0;Black&White;Resize:2;"


#Spanish
text = "Español"
text = "Aplicação"
x_coordinate= 453
y_coordinate= 881
width= 173
height= 66



timeToWait=30
waitGap=5

compType= 1
accuracy= 92

#Spanish
text = "火车站"
x_coordinate= 599
y_coordinate= 619
width= 180
height= 67

#Hindi
#text = "वर्णमाला"
#x_coordinate= 820
#y_coordinate= 549
#width= 306
#height= 94


refText = text
filters = multiFilters
filters = "Contrast:51"
language = Spanish
#dut.validator.StopCaptureZapFrames()
if(dut.validator.StartCaptureZapFrames(40)):

    #dut.controller.sendCommand("OK")
    matchTime = dut.validator.WaitOCRMatch(refText,x_coordinate, y_coordinate, width, height,timeToWait,waitGap,language,filters,compType,accuracy)    
    if(matchTime >= 0):
        logger.Log("time:" + str(matchTime))
        logger.Log("Test case passed")
        dut.CommitTestResult("Passed")
    else:
        logger.Log("Test case failed")
        dut.CommitTestResult("Failed")
    dut.validator.StopCaptureZapFrames()
else:
    logger.Log("Unable to start frame capture")