#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID:
#Description:
#Author:
#Date:
#Version:

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IR"
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

timeToWait = 30
waitGap = 5
#ItalianDict = ["5120_OCR_ITA_SINGLE_NoFil", "5120_OCR_ITA_SINGLE", "5120_OCR_ITA_SINGLE_MULTIFIL", "5120_OCR_ITA_Multi_NoFil", "5120_OCR_ITA_MULTI", "5120_OCR_ITA_MULTI_MULTIFIL"]
#ItalianDict = ["not", "ff", 'ff']
ItalianDict = ["5120_OCR_ITA_SINGLE_NoFil",]
PortugueseDict = ["5120_OCR_POR_SINGLE_NoFil", "5120_OCR_POR_SINGLE_MULTIFIL", "5120_OCR_POR_Multi_NoFil", "5120_OCR_POR_MULTI_MULTIFIL"]
germanDict  = ["5120_OCR_GER_SINGLE_NoFil", "5120_OCR_GER_SINGLE", "5120_OCR_GER_SINGLE_MULTIFIL", "5120_GER_ITA_Multi_NoFil", "5120_OCR_GER_MULTI", "5120_OCR_GER_MULTI_MULTIFIL"]
spanishDict  = ["5120_OCR_SPA_SINGLE_NoFil"]
spanishDict  = ["5120_OCR_SPA_SINGLE", "5120_OCR_SPA_SINGLE_MULTIFIL", "5120_GER_SPA_Multi_NoFil", "5120_OCR_SPA_MULTI_MULTIFIL" ]
chineseDict  = ["5120_OCR_CHI_SINGLE",]# "5120_OCR_SPA_SINGLE_MULTIFIL", "5120_GER_SPA_Multi_NoFil", "5120_OCR_SPA_MULTI_MULTIFIL" ]

hinDict = ["5120_OCR_HIN_SING"]
langDict = spanishDict


for i in range(1):
    for i in langDict:
        chkpt.init(i)
        if(dut.validator.WaitCheckPointMatch(chkpt, timeToWait,waitGap)):
            logger.Log("Passed")
        else:
            logger.Log("Failed")

    imagePath = dut.validator.QuickCapture("test")