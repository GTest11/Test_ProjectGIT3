# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
# TestCase ID:Script for IP Stbs
# Description: Verify the Screen Transitions for the IP STBs
# Author:
# Date:
# Version:
# ''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr
import sys
import os
import time
from datetime import datetime
from System.Collections.Generic import List
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IP"
dut.Configure(args[1], args[2], args[3], args[4], scriptPath, remoteFiringType)
logger.Configure(args[1], args[2], args[3], args[4], scriptPath)

# ''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
# ''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

# '''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
# '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''']\
for i in range(1):
    dut.controller.sendCommand("Home")
    time.sleep(5)
    dut.controller.sendCommand("Right")
    time.sleep(5)
    dut.controller.sendCommand("Right")
    time.sleep(2)
    #dut.controller.sendCommand("Right")
    #time.sleep(2)
    #dut.controller.sendCommand("Select")
    #time.sleep(50)
    #chkpt.init("HPA_IPremote_Watchnow1")
    #if(dut.validator.validateCheckPoint((chkpt))):
    dut.controller.cacheCommand("Ok")
    resp = ScriptingLibrary.APIResponse.ResponseData()
    inputParam1 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
    inputParam1.x_cord = 683#192
    inputParam1.y_cord = 318#249
    inputParam1.width = 471#116
    inputParam1.height = 419#45
    inputParam1.sensitivity = 3
    lstInputParam = List[ScriptingLibrary.HighPrecisionValidationService.MotionParams]()
    inputParam1.enableAggressiveMode = True
    lstInputParam.Add(inputParam1)
    inputParam2 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
    inputParam2.x_cord = 124#192
    inputParam2.y_cord = 767#249
    inputParam2.width = 235#116
    inputParam2.height = 158#45
    inputParam2.sensitivity = 3
    inputParam2.enableAggressiveMode = True
    lstInputParam.Add(inputParam2)
    inputParam3 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
    inputParam3.x_cord = 180#192
    inputParam3.y_cord = 328#249
    inputParam3.width = 174#116
    inputParam3.height = 149#45
    inputParam3.sensitivity = 3
    inputParam3.enableAggressiveMode = True
    lstInputParam.Add(inputParam3)
    inputParam4 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
    inputParam4.x_cord = 577#192
    inputParam4.y_cord = 342#249
    inputParam4.width = 111#116
    inputParam4.height = 119#45
    inputParam4.sensitivity = 3
    inputParam4.enableAggressiveMode = True
    lstInputParam.Add(inputParam4)
####################### 5th Transition
    inputParam5 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
    inputParam5.x_cord = 1378#192
    inputParam5.y_cord = 274#249
    inputParam5.width = 251#116
    inputParam5.height = 227#45
    inputParam5.sensitivity = 3
    inputParam5.enableAggressiveMode = True
    lstInputParam.Add(inputParam5)
    start_time = datetime.now()
    resp = dut.validator.DetectScreenChange(40, lstInputParam)
    end_time=datetime.now()
    print('Duration: {}'.format(end_time - start_time))
#    if resp is not None and resp.MotionData is not None :
#        for i in resp.MotionData:
#            logger.Log("Duration " + str(i.Duration))
#            dut.CommitStepResult("Duration ", str(i.Duration))
#    else:
#        logger.Log("Unable to Launch DetectMotionExecutor")
#        dut.CommitStepResult("Duration ","FAILED")
