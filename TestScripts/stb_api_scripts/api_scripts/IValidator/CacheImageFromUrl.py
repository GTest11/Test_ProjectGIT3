#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestScript ID  : FE_STB_API_VAL_01
#Description    : Validation of CacheImageFromUrl
#API Description: Downloads image from the specified URL and stores it for
#further usage within the script.
#Author         : Arya L
#Date           : 12 March 2018, 22 March 2018, 16 April 2018, 25 June 2018
#Script Version : 3.0
#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#importing python modules
import sys

#importing user defined modules
sys.path.append('../../')
try:
    # Import library file
    import library.commonFunctions as comLib
except ImportError:
    print("Failed to import commonFunctions file")
    sys.exit()

try:
    from configuration.constants import BUILD_NO, CACHE_VALID_URL, FILE_NAME,\
    LONG_NAME, API_PASS, API_FAIL
except ImportError:
    comLib.logger.Warn("Failed to import constants file")
    comLib.dut.CommitTestResult("ABORTED")
    sys.exit()

try:
    from configuration.config import cacheImageFromUrlInputDict, cacheImageFromUrlTestCaseCount
except ImportError:
    comLib.logger.Warn("Failed to import config file")
    comLib.dut.CommitTestResult("ABORTED")
    sys.exit()
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

# Use defined variables and functions
inputDict = cacheImageFromUrlInputDict

APIname = "CacheImageFromUrl"
testCaseMax= cacheImageFromUrlTestCaseCount
exceptionOccured = False

#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#@Function Name	  	: TestAPI()
#@Description		: Tests the CacheImageFromUrl API with diffrent parameters
#and logs its response (status, duration)
#@Input arguments	: Iteration count
#@Output values		: Null
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
def TestAPI(i):
    try:
        # Getting inputs from global dict
        url = inputDict[i][0]
        imageName = inputDict[i][1]
        testScenario = inputDict[i][2]
        expected = inputDict[i][3]
        testCaseName = "API_Cache_" + str(i)

        #Logging test case details
        comLib.logger.Log( "TestCase:  " +str (testCaseName))
        comLib.logger.Log( "Test scenario:  " +str (testScenario))
        comLib.dut.CommitStepResult("Test Scenario", testScenario)

        #Logging input parameters
        comLib.logger.Log( "Input details... ")
        comLib.logger.Log("url: " + str(url))
        comLib.logger.Log("imageName: " + str(imageName))

        #API call and duration calculation
        time1 = comLib.getTimestamp()
        APIstatus = comLib.dut.validator.CacheImageFromUrl(url,imageName)
        time2 = comLib.getTimestamp()
        APIduration = comLib.getAPIduration(time1, time2)
        comLib.logger.Log( "Time taken by the API to return:  " +str (APIduration))
        comLib.dut.CommitStepResult("API: duration ", str(APIduration))
        #Updating test case status
        if APIstatus:
            observed = "api pass"
            comLib.dut.CommitStepResult("API: Test case" + str(testCaseName), "Passed")
            comLib.UpdateTestCaseResult(True, observed, expected)
        else:
            observed = "api fail"
            comLib.dut.CommitStepResult("API: Test case" + str(testCaseName), "Failed")
            comLib.UpdateTestCaseResult(False, observed, expected)
    except Exception as e:
         comLib.logger.Error("Exception thrown by python from TestAPI: " + str(e))

# ******************************************************************************
def main():
    try:
        # Logging basic test information
        comLib.logger.Log("############### API VALIDATION START ##############")
        comLib.logger.Log("Build Number: " + BUILD_NO)
        comLib.logger.Log("API under test: " + str(APIname))
        comLib.dut.CommitStepResult("Build Number  : ", BUILD_NO)
        comLib.dut.CommitStepResult("API: ", APIname)

        #executing precondition, making the box awake by home key press
        comLib.preCondition()

        comLib.dut.validator.QuickCapture("quickCapimage_BeforeAPIvalidation")
        #executing test cases
        for i in range( testCaseMax ):
            TestAPI(i)
        comLib.dut.validator.QuickCapture("quickCapimage_BeforeAPIvalidation")

    except Exception as e:
         comLib.logger.Warn("Exception raised in main function.")
         comLib.logger.Error("Exception thrown by python : " + str(e))
         global exceptionOccured
         exceptionOccured = True

    finally:
        #Updating script status
        if exceptionOccured:
            comLib.dut.CommitTestResult("ERROR")
        else:
            comLib.UpdateTestScriptResult()
        comLib.logger.Log("################ TEST SCRIPT END ##################")
# *****************************************************************************
if __name__ == "__main__":
    main()
# *****************************************************************************
