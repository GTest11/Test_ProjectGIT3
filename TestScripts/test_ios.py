#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time 
clr.AddReference("MobileScriptingLibrary") 
import MobileScriptingLibrary 
dut = MobileScriptingLibrary.MobileDUT() 
logger = MobileScriptingLibrary.Logger() 
chkpt = MobileScriptingLibrary.CheckPoint() 
config = MobileScriptingLibrary.DeviceConfig() 

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''' 

#''''''''''''''''''''''''''''''FOR iOS DEVICE'''''''''''''''''''''''''''''' 
config.DeviceType = "iOS" 
config.AppName = "com.google.ios.youtube" 
config.CreateNewServer= "true"


##''''''''''''''''''''''''''''FOR ANDROID DEVICE'''''''''''''''''''''''''''' 
#config.DeviceType = "Android" 
#config.AppPackage = "com.google.android.youtube" 
#config.AppActivity = ".HomeActivity" 

#NoWTV Launch 
#config.AppPackage = "com.bskyb.nowtv.beta"
#config.AppActivity = "com.nowtv.view.activity.StartupActivity"
# SkyGO launch
#config.AppName = "com.bskyb.skygo"
#config.AppPackage = "com.bskyb.skygo"
#config.AppActivity = "com.bskyb.uma.app.bootstrap.BootstrapActivity"
#config.AppActivity = "com.bskyb.uma.app.deeplink.DeepLinkActivity"

args = sys.argv 
scriptPath = os.path.realpath(__file__) 
#dut.validator.UploadScreenshot("imageName", Screenshot)#The Parameter Screenshot should be obtained from GetScreenshot API
dut.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Log("Modified after scheduling a Job")
for i in range(1):       
    try: 
        if(dut.InitApp(config)): 
            time.sleep(20)
            logger.Log("App launched.")  
            
            #imagePath = dut.validator.QuickCapture(imageName,1)
            
            #imagePath = dut.validator.QuickCaptureEx(imageName,image_format,1)
            screen_shot_string=dut.GetScreenshot()
            dut.validator.UploadScreenshot("UploadScreenshot", screen_shot_string)           



#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


##start_time = datetime.now()
##chkpt.init("5_0_17_RMSE")#("500_OCR")
##end_time=datetime.now()
##print('Duration: {}'.format(end_time - start_time))

##dut.controller.sendCommand("Up")
##dut.controller.sendCommand("Up")
##start_time = datetime.now()
##if(dut.validator.validateCheckPoint((chkpt))):
##    #end_time=datetime.now()
##    #print('Duration: {}'.format(end_time - start_time))
##    #logger.Log("Required Screen reached")
##    dut.CommitTestResult("PASSED")
##else:
##    #logger.Error("Wrong Screen reached")
##    dut.CommitTestResult("FAILED")

##for i in range(0,3):
#    #chkpt.init("iOS_test1")
#    #if(dut.validator.validateCheckPoint((chkpt))):
#        #"Passed"
#    #else:
#        #"Failed"

##dut.InitApp(config)
##time.sleep(10)
##imagePath1 = dut.validator.CaptureImage(89, 60, 138, 68, "refImage", 90, 1)
##logger.Log("Path: " + imagePath1)
### capturing testImage
##imagePath2 = dut.validator.CaptureImage(89, 60, 138, 68, "testImage", 90, 1)
##logger.Log("Path: " + imagePath2)
### Comparing images
##if(dut.validator.ImageMatch("refImage", "testImage", 1, "8")):
#   #dut.CommitTestResult("Passed")
##else:
#    #dut.CommitTestResult("Failed")