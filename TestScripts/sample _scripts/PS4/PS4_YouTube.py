# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
# TestCase Name : PS4_YouTube
# Description   : This test script is used to test PS4 youtube video play feature
# Author        : Arathy P.S.
# Date          : 29/10/2018
# Version       : 1.0
# Test Scenario : 1. Go to TV&Video
#                2. Select YouTube from the list
#                3. Search for a video & select one from the list
#                4. Verify the video
# ''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr
import sys
import os
import time
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
chkpt1 = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IR"
dut.Configure(args[1], args[2], args[3], args[4], scriptPath, remoteFiringType)
logger.Configure(args[1], args[2], args[3], args[4], scriptPath)

# ''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
# ''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


def home_navigate():
    try:
        for i in range(5):
            chkpt.init("PS4_Home")
            if dut.validator.validateCheckPoint(chkpt):
                dut.CommitStepResult("Home Screen Launch","PASSED")
                break
            else:
                dut.controller.sendCommand("PSHOME")            
    except Exception as e:
        logger.Log("Error in home_navigate()" + str(e))


def tv_guide_navigate():
    try:
        chkpt1.init("PS4_Home_TV_videos")
        for i in range(10):
            if not dut.validator.validateCheckPoint(chkpt1):
                dut.controller.sendCommand("RIGHT")
                time.sleep(2)
            else:
                return True
    except Exception as e:
        logger.Log("Error in tv_guide_nav() " + str(e))


def navigate(checkpnt, scrn_name):
    nav_status = False
    try:
        time.sleep(2)
        chkpt.init(checkpnt)
        if dut.validator.validateCheckPoint(chkpt):
            dut.CommitStepResult(scrn_name + "Validation", "PASSED")
            nav_status = True
        else:
            dut.CommitStepResult(scrn_name + "Validation", "FAILED")
    except Exception as nav_e:
        logger.Log("Exception in navigate() " + str(nav_e))
    finally:
        return nav_status


def video_verification():
    video_status = False
    try:
        time.sleep(5)
        if dut.validator.DetectMotion(278, 262, 501, 372, 5, 0.5, "20"):
            dut.CommitStepResult("Motion Detection", "PASSED")
            video_status = True
        else:
            dut.CommitStepResult("Motion Detection", "FAILED")
    except Exception as vid_e:
        logger.Log("Exception in video_verification() " + str(vid_e))
    finally:
        return video_status


def main():
    script_status = False
    try:
        home_navigate()
        time.sleep(2)
        tv_guide_status = tv_guide_navigate()
        time.sleep(2)
        if tv_guide_status:
            dut.controller.sendCommand("DOWN")
            time.sleep(2)
            dut.controller.sendCommand("RIGHT")
            time.sleep(2)
            dut.controller.sendCommand("RIGHT")
            dut.controller.sendCommand("NAVENTER")
            youtube_status = navigate("PS4_YouTube_Launch", "YouTube")
            # Key firing to play video
            if youtube_status:
                dut.controller.sendCommand("NAVENTER")
                time.sleep(1)
                dut.controller.sendCommand("RIGHT")
                time.sleep(1)
                dut.controller.sendCommand("NAVENTER")
                time.sleep(1)
                dut.controller.sendCommand("NAVENTER")
                time.sleep(1)
                if video_verification():
                    script_status = True
    except Exception as main_e:
        logger.Log("Exception in main() " + str(main_e))
    finally:
        if script_status is True:
            dut.CommitTestResult("PASSED")
        else:
            dut.CommitTestResult("FAILED")
        for i in range(3):
            dut.controller.sendCommand("EXIT")


if __name__ == "__main__":
    main()
