# ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
# TestCase ID:Script for IP Stbs
# Description: Verify the Screen Transitions for the IP STBs
# Author:
# Date:
# Version:
# ''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr
import sys
import os
import time
from System.Collections.Generic import List
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IP"
dut.Configure(args[1], args[2], args[3], args[4], scriptPath, remoteFiringType)
logger.Configure(args[1], args[2], args[3], args[4], scriptPath)

# ''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
# ''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

# '''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
# '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''']\
for i in range(1):
    dut.controller.sendCommand("Home")
    time.sleep(5)
    dut.controller.sendCommand("Right")
    time.sleep(5)
    dut.controller.sendCommand("Select")
    time.sleep(30)
    chkpt.init("HPA_IPremote_Watchnow")
    if(dut.validator.validateCheckPoint((chkpt))):
        dut.controller.cacheCommand("Select")
        resp = ScriptingLibrary.APIResponse.ResponseData()
        inputParam1 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
        inputParam1.x_cord = 156#192
        inputParam1.y_cord = 323#249
        inputParam1.width = 515#116
        inputParam1.height = 464#45
        inputParam1.sensitivity = 3
        lstInputParam = List[ScriptingLibrary.HighPrecisionValidationService.MotionParams]()
        inputParam1.enableAggressiveMode = True
        lstInputParam.Add(inputParam1)
        inputParam2 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
        inputParam2.x_cord = 156#192
        inputParam2.y_cord = 323#249
        inputParam2.width = 515#116
        inputParam2.height = 464#45
        inputParam2.sensitivity = 3
        inputParam2.enableAggressiveMode = True
        lstInputParam.Add(inputParam2)
        inputParam3 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
        inputParam3.x_cord = 156#192
        inputParam3.y_cord = 323#249
        inputParam3.width = 515#116
        inputParam3.height = 464#45
        inputParam3.sensitivity = 10
        inputParam3.enableAggressiveMode = True
        lstInputParam.Add(inputParam3)
        inputParam4 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
        inputParam4.x_cord = 156#192
        inputParam4.y_cord = 323#249
        inputParam4.width = 515#116
        inputParam4.height = 464#45
        inputParam4.sensitivity = 10
        inputParam4.enableAggressiveMode = True
        lstInputParam.Add(inputParam4)

        resp = dut.validator.DetectScreenChange(120, lstInputParam)
        if resp is not None and resp.MotionData is not None :
            for i in resp.MotionData:
                logger.Log("Duration " + str(i.Duration))
                dut.CommitStepResult("Duration ", str(i.Duration))
        else:
            logger.Log("Unable to Launch DetectMotionExecutor")
            dut.CommitStepResult("Duration ","FAILED")

