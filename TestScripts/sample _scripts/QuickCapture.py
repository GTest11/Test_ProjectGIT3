#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID    :FEPT_19
# Description	:To check whether WaitOCRMatch API is working as expected
# Author		:Arathy P.S.
# Date			:15-12-2016
# Version		:0.1
#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
from datetime import datetime
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IR"
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)
      
#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#for i in range(10):
    #imageUrl = dut.validator.QuickCapture("")
#logger.Log("image URL : " + str(imageUrl))
##logger.Log("imagePath : "+imagePath)
#dut.controller.sendCommand("Home")
#
#imageName = "test2"#name of image
#imagePath =dut.validator.QuickCapture(imageName)
#logger.Log("imagePath : "+imagePath)

dut.controller.sendCommand("Exit")
dut.controller.sendCommand("Home")
x_coordinate = 50
y_coordinate = 49
width = 15
height = 5
ImageName = "refimage"#name of image
jpegQuality = 90
OverwriteAction = 0
imagePath = dut.validator.CaptureImage(x_coordinate,y_coordinate,width,height,ImageName,jpegQuality,OverwriteAction)
logger.Log("imagePath : "+imagePath)

for i in range(0):
    imageName = "test"
    imageformat ="TPP"
    start_time = datetime.now()
    print start_time
    imagePath = dut.validator.QuickCaptureEx(imageName,imageformat)
    end_time=datetime.now()
    Duration=end_time - start_time
    print('Duration2: {}'.format(end_time - start_time))
    dut.CommitStepResult("Time",str(Duration))
    logger.Log("imagePath : "+imagePath)
    logger.Log("imageFormat : "+imageformat)

