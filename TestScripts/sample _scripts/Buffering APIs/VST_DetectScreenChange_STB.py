#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID: VideoStartup Time calculation
#Description: VST calculation with DetectScreenchange 
#Author:Victoria STB
#Date: 22/04/2019
#Version:1.0

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
import base64
from System.Collections.Generic import List
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IR"

dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
for i in range(0,1):
    dut.controller.sendCommand("Back")

dut.controller.sendCommand("Home")
time.sleep(10)
dut.controller.sendCommand("NowTv")
time.sleep(40)
for i in range (0,9):
    chkpt.init("NowTv_Help_IMG")
    if(dut.validator.validateCheckPoint((chkpt))):     
        logger.Log("Required Screen reached")
        dut.CommitTestResult("PASSED")
    else:
        dut.controller.sendCommand("Down")
        logger.Error("Help Screen not reached")
        dut.CommitTestResult("FAILED")

for i in range(0,8):
    chkpt.init("NowTv_Sports_IMG")
    if(dut.validator.validateCheckPoint((chkpt))):     
        logger.Log("Required Screen reached")
        dut.CommitTestResult("PASSED")
        # wait time given for loading the sports contents
        time.sleep(15)
        dut.controller.sendCommand("Right")  
        break
    else:
        dut.controller.sendCommand("Up")
        logger.Error("Wrong Screen reached")
        dut.CommitTestResult("FAILED")


time.sleep(10)
######Detect Screen Change Started
resp = ScriptingLibrary.APIResponse.ResponseData()
inputParam1 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
#print type(inputParam)
inputParam1.x_cord = 690
inputParam1.y_cord = 406
inputParam1.width =  405
inputParam1.height = 234
inputParam1.sensitivity = 3
inputParam1.enableAggrassiveMode = True
lstInputParam =List[ScriptingLibrary.HighPrecisionValidationService.MotionParams]()
lstInputParam.Add(inputParam1)
####2nd transition includes buffering Area
inputParam2 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
inputParam2.x_cord = 883
inputParam2.y_cord = 459
inputParam2.width =  402 
inputParam2.height = 194
inputParam2.sensitivity = 5
inputParam2.enableAggressiveMode = True
lstInputParam.Add(inputParam2)
####3rd transition 
inputParam3 = ScriptingLibrary.HighPrecisionValidationService.MotionParams()
inputParam3.x_cord = 172#722
inputParam3.y_cord = 206#636
inputParam3.width =  587#389 
inputParam3.height = 402#198
inputParam3.sensitivity = 6
inputParam3.enableAggressiveMode = True
lstInputParam.Add(inputParam3)
stepcommit="valid arguments"
expected="Motion Detected"
###############Cachecommand started
#dut.controller.cacheCommand("Ok")
dut.controller.cacheCommand("Ok")
response = dut.validator.DetectScreenChange(110,lstInputParam)
sum_of_duration = 0
count = 0
if response is not None and response.MotionData is not None:
    for i in response.MotionData:
        count += 1
        logger.Log("Video startup time obtained from API >>> " + str(i.Duration))
        dut.CommitStepResult("Video startup time Obtained!", str(i.Duration))
        sum_of_duration += i.Duration
else:
    logger.Log("Failed to get duration")
    dut.CommitStepResult("Duration !!!", "FAILED")
logger.Log("No: of durations calculated from response ---> "+str(count))
logger.Log("Total duration calculated from response ---> "+str(sum_of_duration) + " " 'ms')

