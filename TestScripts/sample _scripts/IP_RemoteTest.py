#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
#TestCase ID:
#Description:
#Author:
#Date:
#Version:

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY''''''''''''''''''''
import clr,sys,os,time
clr.AddReference("ScriptingLibrary")
import ScriptingLibrary
dut = ScriptingLibrary.DUT()
logger = ScriptingLibrary.Logger()
chkpt = ScriptingLibrary.CheckPoint()
testResult = ScriptingLibrary.TestResult()
args = sys.argv
scriptPath = os.path.realpath(__file__)
remoteFiringType = "IP"
dut.Configure(args[1],args[2],args[3],args[4],scriptPath,remoteFiringType)
logger.Configure(args[1],args[2],args[3],args[4],scriptPath)
      
#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''

#'''''''''''''''''''''''''END AUTOGENERATED CODE'''''''''''''''''''''''''''
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

#SPS testing for IP remote
dut.navigator.NavigateTo ("NETWORK",1,False)


x_coordinate = 50
y_coordinate = 49
width = 15
height = 5
ImageName = "refimage"#name of image
jpegQuality = 90
OverwriteAction = 2
imagePath = dut.validator.CaptureImage(x_coordinate,y_coordinate,width,height,ImageName,jpegQuality,OverwriteAction)
logger.Log("imagePath : "+imagePath)



#val=dut.GetDUTAttribute("SerialNo")
#print val
#Value=dut.SetCustomDUTAttribute("attribute
#print Value



#
#imagePath = dut.validator.QuickCaptureEx("Test","PNG")






image_format = "BMP"
imageName = "test"

dut.controller.sendCommand("Home")
time.sleep(2)
imagePath = dut.validator.QuickCaptureEx(imageName, image_format)
dut.CommitStepResult("Launch QuickCaptureEx", "PASSED")
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Back")
time.sleep(2)
dut.controller.sendCommand("Home")
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Ok")
time.sleep(2)
dut.controller.sendCommand("Right")
time.sleep(2)
dut.controller.sendCommand("Left")
time.sleep(2)
dut.controller.sendCommand("Home")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Down")
time.sleep(2)
dut.controller.sendCommand("Ok")
time.sleep(15)

chkpt.init("IPremote_TVguide")
if(dut.validator.validateCheckPoint((chkpt))):
    "IP remote test passed"
    dut.CommitTestResult("PASSED")
else:
    "IP remote test cases failed"
    dut.CommitTestResult("FAILED")