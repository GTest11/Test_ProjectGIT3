#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time 
from System.Collections.Generic import List
from datetime import datetime
clr.AddReference("MobileScriptingLibrary") 
import MobileScriptingLibrary 
dut = MobileScriptingLibrary.MobileDUT() 
logger = MobileScriptingLibrary.Logger() 
chkpt = MobileScriptingLibrary.CheckPoint() 
config = MobileScriptingLibrary.DeviceConfig() 

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''' 

#''''''''''''''''''''''''''''''FOR iOS DEVICE'''''''''''''''''''''''''''''' 
#config.DeviceType = "iOS" 
#config.AppName = "com.google.ios.youtube" 


#''''''''''''''''''''''''''''FOR ANDROID DEVICE'''''''''''''''''''''''''''' 
config.DeviceType = "Android" 
#config.AppPackage = "com.bskyb.nowtv.beta" 
#config.AppActivity = "com.nowtv.view.activity.StartupActivity" 
#config.AppPackage = "com.bskyb.nowtv.beta"
#config.AppActivity = "com.bskyb.nowtv.ui.activities.LaunchActivity"
#youtube
config.AppPackage = "com.google.android.youtube" 
config.AppActivity = ".HomeActivity" 
config.CreateNewServer = "true"

args = sys.argv 
scriptPath = os.path.realpath(__file__) 
dut.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 
#for i in range(0,4):       
try: 
	if(dut.InitApp(config)): 
		logger.Log("App launched.") 
		time.sleep(5)
		dut.validator.QuickCapture("app_launch")
		inputParam = MobileScriptingLibrary.HighPrecisionValidationService.MotionParams()
		tapData = MobileScriptingLibrary.Models.TapData()
		tapData.type = MobileScriptingLibrary.Constants.ElementType.XPath
		tapData.value="//android.widget.ImageView[@resource-id='com.google.android.youtube:id/thumbnail']"#"//android.widget.ImageView[@content-desc='Search']"
		tapDataList = List[MobileScriptingLibrary.Models.TapData]()
		tapDataList.Add(tapData)
		#tapData.x_Cord = 250
		#tapData.y_Cord = 250
		#dut.Tap(500,500)
		#Second tap Data List
		#tapData = MobileScriptingLibrary.Models.TapData()
		#tapData.type=MobileScriptingLibrary.Constants.ElementType.XPath
		#tapData.value="//android.widget.ImageView[@content-desc='Video']"
		#tapDataList = List[MobileScriptingLibrary.Models.TapData]()
		#tapDataList.Add(tapData)
		#print type(inputParam)
		inputParam.x_cord = 102#0
		inputParam.y_cord = 108#0
		inputParam.width = 454#500
		inputParam.height = 188#500
		inputParam.sensitivity = 3
		lstInputParam =List[MobileScriptingLibrary.HighPrecisionValidationService.MotionParams]()
		lstInputParam.Add(inputParam)
		inputParam.x_cord = 102#109
		inputParam.y_cord = 108#890
		inputParam.width = 454#515#500
		inputParam.height = 188#206#500
		inputParam.sensitivity = 3
		lstInputParam.Add(inputParam)
		start_time = datetime.now()
		resp = dut.validator.GetScreenTransitions(dut,120,lstInputParam, tapDataList)
		dut.validator.QuickCapture("GetScreenTran")
		end_time=datetime.now()
		print('DurationHPA: {}'.format(end_time - start_time))            
	if resp is not None and resp.MotionData is not None :
		for i in resp.MotionData:
			logger.Log("Duration " + str(i.Duration))
			dut.CommitStepResult("Duration ", str(i.Duration))
	else:
		logger.Log("Unable to Launch DetectMotionExecutor")
		dut.CommitStepResult("Duration ","FAILED")
finally: 
	#dut.Stop() 
	time.sleep(5)

#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''