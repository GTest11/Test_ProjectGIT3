#'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
#TestCase ID: 
#Description: 
#Author: 
#Date: 
#Version: 

#''''''''''''''''''''AUTOGENERATED CODE - DO NOT MODIFY'''''''''''''''''''' 
import clr,sys,os,time
from datetime import datetime
from System.Collections.Generic import List
clr.AddReference("MobileScriptingLibrary") 
import MobileScriptingLibrary 
dut = MobileScriptingLibrary.MobileDUT() 
logger = MobileScriptingLibrary.Logger() 
chkpt = MobileScriptingLibrary.CheckPoint() 
config = MobileScriptingLibrary.DeviceConfig()
from threading import Thread

#''''''''''''''''''''''''''''''''IMPORTS''''''''''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''END IMPORTS''''''''''''''''''''''''''''''''' 

#''''''''''''''''''''''''''''FOR ANDROID DEVICE'''''''''''''''''''''''''''' 
config.DeviceType = "Android" 
config.AppPackage = "com.graymatrix.did" 
config.AppActivity = "com.graymatrix.did.splash.SplashActivity"

args = sys.argv 
scriptPath = os.path.realpath(__file__) 
dut.Configure(args[1],args[2],args[3],args[4],scriptPath) 
logger.Configure(args[1],args[2],args[3],args[4],scriptPath) 
    

buffering_time = 0
duration = 20

try: 

    if(dut.InitApp(config)): 
        logger.Log("App launched.") 
        time.sleep(17)

        #tapping TV Shows
        dut.Tap(656, 800)
        time.sleep(7)

        #tapping search icon
        dut.TapElement(MobileScriptingLibrary.Constants.ElementType.Id, 'com.graymatrix.did:id/action_bar_search')
        time.sleep(3)
        
        #entering search string
        dut.SendKeys(MobileScriptingLibrary.Constants.ElementType.Id, 'com.graymatrix.did:id/text1', 'Watch Zee Play School on Zee5')
        time.sleep(3)

        reservationRequest = MobileScriptingLibrary.HighPrecisionValidationService.SlotReservationRequest()
        reservationRequest.AlgorithmCount = 1
        reservationResponse = dut.ReserveSlotForHPA(reservationRequest)
        logger.Log('tokkkk'+str(reservationResponse.Data.Token))

        if(reservationResponse.Status):
            request = MobileScriptingLibrary.HighPrecisionValidationService.VideoAnalysisRequest()
            deviceInfo = MobileScriptingLibrary.HighPrecisionValidationService.DeviceInfo()
            algorithmList =List[MobileScriptingLibrary.HighPrecisionValidationService.Algorithm]()

    #        algorithm = MobileScriptingLibrary.HighPrecisionValidationService.Algorithm()
    #        algorithm.Name = "HoughCircle"
    #        #detect buffering icon (hough circle in oneplus 5T)
    #        algorithm.Params = "ewogICJtYXNrRGV0YWlscyI6IHsKICAgICJ4Y29yZCI6IDI4MSwKICAgICJ5Y29yZCI6IDE4MCwKICAgICJ3aWR0aCI6IDc4LAogICAgImhlaWdodCI6IDc2CiAgfSwKICAiY2lyY2xlVGhyZXNob2xkcyI6IHsKICAgICJjaXJjbGVQZXJjZW50YWdlTG93TGltaXQiOiAzMCwKICAgICJjaXJjbGVQZXJjZW50YWdlVXBMaW1pdCI6IDkzLAogICAgImNpcmNsZVJhZGl1c0xvd0xpbWl0IjogMzUsCiAgICAiY2lyY2xlUmFkaXVzVXBMaW1pdCI6IDQ1LAogICAgImNpcmNsZUNlbnRlclhPZmZzZXQiOiA0Ny40LAogICAgImNpcmNsZUNlbnRlcllPZmZzZXQiOiAzNS40LAogICAgImNpcmNsZUNlbnRlcldpZHRoIjogMzAsCiAgICAiY2lyY2xlQ2VudGVySGVpZ2h0IjogMzAKICB9LAogICJtaXNjVGhyZXNob2xkcyI6IHsKICAgICJjYW5ueVRocmVzaG9sZDEiOiA3NSwKICAgICJjYW5ueVRocmVzaG9sZDIiOiAxMDAsCiAgICAiaG91Z2hEcCI6IDEuMiwKICAgICJob3VnaE1pbkRpc3QiOiA2MC4wLAogICAgImhvdWdoUGFyYW0xIjogODAuMCwKICAgICJob3VnaFBhcmFtMiI6IDM3LjAsCiAgICAiZGlzdFRyYW5zZm9ybUZpbHRlckRpc3QiOiAzCiAgfQp9"
    #        algorithmList.Add(algorithm)

            algorithm = MobileScriptingLibrary.HighPrecisionValidationService.Algorithm()
            algorithm.Name = "Histogram"
            #detect buffering icon using histogram with pink element
            algorithm.Params = "ewogICJyZ2JEZXRhaWxzTGlzdCI6IFsKICAgIHsKICAgICAgIlIiOiAxNjEsCiAgICAgICJHIjogMCwKICAgICAgIkIiOiAyMDAsCiAgICAgICJwaXhlbENvdW50VGhyZXNob2xkIjogNjAwLAogICAgICAiaHVlVG9sZXJhbmNlIjogMTkyLAogICAgICAic2F0dXJhdGlvblRvbGVyYW5jZSI6IDI0MCwKICAgICAgInZhbHVlVG9sZXJhbmNlIjogOTQKICAgIH0KICBdLAogICJtYXNrRGV0YWlscyI6IHsKICAgICJ4Y29yZCI6IDI4MywKICAgICJ5Y29yZCI6IDE4MSwKICAgICJ3aWR0aCI6IDczLAogICAgImhlaWdodCI6IDc0CiAgfQp9"
            algorithmList.Add(algorithm)

            request.Duration = duration
            request.Token = reservationResponse.Data.Token
            request.Algorithms = algorithmList
            request.DeviceInfo = deviceInfo

            logger.Log("Gonna start!!!....")

            response = dut.validator.StartHighPrecisionFrameAnalysis(request)
            # to start playback, Select 1st among the listed search results
            dut.Tap(288, 393)


            statusRequest = MobileScriptingLibrary.HighPrecisionValidationService.VideoAnalysisStatusRequest()
            statusRequest.Token = response.Data.Token
            statusResponse = dut.validator.GetHighPrecisionFrameAnalysisResult(statusRequest)
            logger.Log("Status of GetHighPrecisionFrameAnalysisResult response "+str(statusResponse.Status))
            sum_of_buffering_duration = 0
            while statusResponse.Status == 'In Progress':
                logger.Log("Status of HPA is 'In Progress', so sleeping for 3 seconds and fetching results again")
                time.sleep(3)
                statusResponse = dut.validator.GetHighPrecisionFrameAnalysisResult(statusRequest)
            if statusResponse is not None and statusResponse.Data is not None:
                for data in statusResponse.Data:
                    for algorithm_data in data.AlgorithmData:
                        sum_of_buffering_duration += algorithm_data.Duration
                        logger.Log('Buffering duration -->' + str(algorithm_data.Duration))
            else:
                logger.Log("Failed to get duration")
            logger.Log("Sum of buffering durations -->"+str(sum_of_buffering_duration))
            buffering_ratio = sum_of_buffering_duration/(duration*1000)
            logger.Log("-----------------------------------------------------------")
            logger.Log("********* Buffering Ratio calculated *********"+str(buffering_ratio))
            logger.Log("-----------------------------------------------------------")
            dut.CommitStepResult("BUFFERING RATIO", str(buffering_ratio))
    else:
        logger.Error('InitApp Failed..!')


finally: 
    dut.Stop()
    pass
#'''''''''''''''''''''''''END AUTOGENERATED CODE''''''''''''''''''''''''''' 
#''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
